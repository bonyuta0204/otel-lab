version: '3.8'

services:
  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "14250:14250"  # Jaeger gRPC
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true

  # PostgreSQL for Task Service
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=otellab
      - POSTGRES_PASSWORD=otellab123
      - POSTGRES_DB=taskdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otellab"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - TASK_SERVICE_ADDR=task-service:8081
      - USER_SERVICE_ADDR=user-service:8082
      - SERVICE_NAME=api-gateway
    depends_on:
      - jaeger
      - task-service
      - user-service
    volumes:
      - ./api-gateway:/app
    command: air -c .air.toml

  # Task Service
  task-service:
    build:
      context: .
      dockerfile: task-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=otellab
      - DB_PASSWORD=otellab123
      - DB_NAME=taskdb
      - USER_SERVICE_ADDR=user-service:8082
      - SERVICE_NAME=task-service
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - ./task-service:/app
    command: air -c .air.toml

  # User Service
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - SERVICE_NAME=user-service
    depends_on:
      - jaeger
    volumes:
      - ./user-service:/app
    command: air -c .air.toml

volumes:
  postgres_data: